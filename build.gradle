plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'application'
    apply plugin: 'com.github.johnrengelman.shadow'

    version = '1.0'
    sourceCompatibility = '1.8'

    dependencies {
        annotationProcessor 'org.projectlombok:lombok:1.18.16'
        annotationProcessor "io.vertx:vertx-codegen:3.9.4"
        annotationProcessor 'io.vertx:vertx-service-proxy:3.9.4'
        compileOnly "org.projectlombok:lombok:1.18.16"
        testCompile group: 'junit', name: 'junit', version: '4.12'

        // vertx core
        compile "io.vertx:vertx-web:3.9.4"

        // vertx config
        compile "io.vertx:vertx-config:3.9.4"
        // yaml
        compile 'io.vertx:vertx-config-yaml:3.9.4'

        // jackson
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.2'

        // redis
        compile "io.vertx:vertx-redis-client:3.9.4"

        // jvm级无锁队列
        compile 'com.lmax:disruptor:3.4.2'

        // 本地缓存
        compile 'com.github.ben-manes.caffeine:caffeine:2.8.5'

        // 服务代理代码生成
        compile 'io.vertx:vertx-service-proxy:3.9.4'
        compileOnly 'io.vertx:vertx-codegen:3.9.4'

        // hazelcast集群管理 (这玩意是可选的, 打包单体服务已经把他排除了)
        compile 'io.vertx:vertx-hazelcast:3.9.4'

        compile 'org.slf4j:slf4j-api:1.7.22'
        compile 'org.slf4j:slf4j-log4j12:1.7.22'
//        compile 'org.slf4j:slf4j-simple:1.7.22'

        task annotationProcessing(type: JavaCompile) { // codegen
            group 'build'
            description 'Generates the Vert.x proxies'
            source = sourceSets.main.java
            classpath = configurations.compile + configurations.compileOnly + configurations.annotationProcessor
            options.annotationProcessorPath = configurations.annotationProcessor
            options.compilerArgs = [
                    "-proc:only",
                    "-processor", "io.vertx.codegen.CodeGenProcessor",
                    "-Acodegen.output=${project.projectDir}/src/main/java/"
            ]
            destinationDir = file("${projectDir}/src/main/java/")
        }
    }

    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    }

}
group 'org.market'
version '1.0-SNAPSHOT'

